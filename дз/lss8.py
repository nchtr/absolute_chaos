import math
# Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки,
# но пересыпать тоже вредно и не стоит спать более B часов. Сейчас Аня спит H часов в сутки.
# Если режим сна Ани удовлетворяет рекомендациям передачи “Здоровье”, выведите “Это
# нормально”. Если Аня спит менее A часов, выведите “Недосып”, если же более B часов, то
# выведите “Пересып”.
# Получаемое число A всегда меньше либо равно B.
# На вход программе в три строки подаются переменные в следующем порядке: A, B, H.
# Обратите внимание на регистр символов: вывод должен в точности соответствовать
# описанному в задании, т. е. если программа должна вывести "Пересып", выводы программы
# "пересып", "ПЕРЕСЫП", "ПеРеСыП" и другие не будут считаться верными.
# Это первое не самое тривиальное задание на условное выражение. В случаях, когда
# разбить исполнение программы на несколько направлений, стоит внимательно обдумать все
# условия, которые нужно использовать. Особое внимание стоит уделить строгости
# используемых условных операторов. Для того, чтобы понимать, какой из них стоит
# использовать, внимательно прочитайте условие задания.
a=int(input())
b=int(input())
h=int(input())
if a<b:
    if a<h<b:
        print("Это нормально")
    elif a<h>b:
        print("Пересып")
    elif a>h<b:
        print("Недосып")
else:
    print("Неверный ввод")
    
    
# Требуется определить, является ли данный год високосным.
# Напомним, что високосными годами считаются те годы, порядковый номер которых
# либо кратен 4, но при этом не кратен 100, либо кратен 400 (например, 2000-й год являлся
# високосным, а 2100-й будет не високосным годом).
# Программа должна корректно работать на числах 1900≤n≤3000.
# Выведите "Високосный" в случае, если считанный год является високосным и
# "Обычный" в обратном случае (не забывайте проверять регистр выводимых программой
# символов).
y=int(input())
if 1900<=y<=3000:
    if y%400==0:
        print("Високосный")
    else:
        print("Обычный")
else:
    print("Вне диапозона")


# Напишите программу, принимающую на вход целое число, которая выводит True, если
# переданное значение попадает в интервал (- 15,12]∪(14,17)∪[19,+∞) и False в противном
# случае (регистр символов имеет значение).
# Обратите внимание на разные скобки, используемые для обозначения интервалов. В
# задании используются полуоткрытые и открытые интервалы
ch=float(input())
if (-15<ch<=12) or (14<ch<17) or (19<=ch<math.inf):
    print("True")
else:
    print("False")


# Жители страны Малевии часто экспериментируют с планировкой комнат. Комнаты
# бывают треугольные, прямоугольные и круглые. Чтобы быстро вычислять жилплощадь,
# требуется написать программу, на вход которой подаётся тип фигуры комнаты и
# соответствующие параметры, которая бы выводила площадь получившейся комнаты.
# Для числа π в стране Малевии используют значение 3.14.
def circle():
    r=float(input("Введите радиус:"))
    print("Площадь комнаты",3.14*(r**2))
def par():
    a=float(input("Сторона 1: "))
    b=float(input("Сторона 2: "))
    print("Площадь комнаты=",a*b)
def tri():
    a=float(input("Сторона 1: "))
    b=float(input("Сторона 2: "))
    c=float(input("Сторона 3: "))
    hp=(a+b+c)/2
    s=math.sqrt(hp*(hp-a)*(hp-b)*(hp-c))
    print("Площадь комнаты=",s)
type=int(input("Введите форму комнаты: \n1-круг, 2-прямоугольная, 3-треугольная\n"))
if type==1:
    circle()
elif type==2:
    par()
elif type==3:
    tri()
else:
    print("Out of range")


# В институте биоинформатики по офису передвигается робот. Недавно студенты из
# группы программистов написали для него программу, по которой робот, когда заходит в
# комнату, считает количество программистов в ней и произносит его вслух: "n
# программистов".
# Для того, чтобы это звучало правильно, для каждого n нужно использовать верное
# окончание слова.
# Напишите программу, считывающую с пользовательского ввода целое
# число n (неотрицательное), выводящее это число в консоль вместе с правильным образом
# изменённым словом "программист", для того, чтобы робот мог нормально общаться с
# людьми, например, 1 программист, 2 программиста, 5 программистов.
# В комнате может быть очень много программистов. Проверьте, что ваша программа
# правильно обработает все случаи, как минимум до 1000 человек.
# Если ваше решение не проходит какой-то тест, это значит, что вы не рассмотрели
# какой-то из случаев входных данных (число программистов 10000≤n≤1000). Обязательно
# проверяйте свои решения на дополнительных значениях, а не только на тех, что приведены в
# условии задания.
count = int(input())
if (count%100>=11 and count%100<=19) or (count%10==0 or count%10>=5 and count%10<=9):
     print(count, "программистов")
elif count%10==2 or count%10==3 or count%10==4: 
    print(count,"программиста")
else:
    print(count,"программист")



